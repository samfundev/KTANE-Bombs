generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           String @id
  username     String @unique
  discordName  String @default("")
  avatar       String
  accessToken  String
  refreshToken String
  permissions  Int[]
}

model MissionPack {
  id        Int       @id @default(autoincrement())
  name      String    @unique
  steamId   String
  missions  Mission[]
  verified  Boolean   @default(true)
  dateAdded Int?
}

model Mission {
  id             Int          @id @default(autoincrement())
  name           String       @unique
  authors        String[]
  bombs          Bomb[]
  completions    Completion[]
  designedForTP  Boolean      @default(false)
  tpSolve        Boolean      @default(false)
  factory        String?
  strikeMode     String?
  timeMode       String?
  verified       Boolean      @default(true)
  variant        Int?
  logfile        String?
  dateAdded      Int?

  missionPack   MissionPack? @relation(fields: [missionPackId], references: [id])
  missionPackId Int?
}

model Bomb {
  id      Int   @id @default(autoincrement())
  modules Int
  time    Float
  strikes Int
  widgets Int
  pools   Json

  mission   Mission @relation(fields: [missionId], references: [id], onDelete: Cascade)
  missionId Int
}

model Completion {
  id        Int      @id @default(autoincrement())
  proofs    String[]
  time      Float
  team      String[]
  first     Boolean
  old       Boolean
  solo      Boolean
  notes     String?

  mission   Mission @relation(fields: [missionId], references: [id], onDelete: Cascade)
  missionId Int

  verified Boolean @default(true)
}
